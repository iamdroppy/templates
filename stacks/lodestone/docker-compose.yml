version: '2.2'
services:
  elasticsearch:
    image: analogj/lodestone:elasticsearch
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      #      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /opt/mediadepot/apps/lodestone/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 19200:9200
      - 19300:9300
    network_mode: bridge

  processor:
    image: analogj/lodestone:processor
    depends_on:
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      storage:
        condition: service_healthy
      tika:
        condition: service_healthy
    network_mode: bridge
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - RABBITMQ_USER=lodestone
      - RABBITMQ_PASS=lodestone
  webapp:
    image: analogj/lodestone:web
    depends_on:
      elasticsearch:
        condition: service_healthy
      storage:
        condition: service_healthy
    network_mode: bridge
    labels:
      - "traefik.http.services.webapp.loadbalancer.server.port=3000"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.web.rule=PathPrefix(`/web`)"
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - RABBITMQ_USER=lodestone
      - RABBITMQ_PASS=lodestone

  storage:
    image: analogj/lodestone:storage
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9000/minio/health/ready || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
    #    ports:
    #      # this port is only necessary if you would like to view the admin backend for minio. MINIO_BROWSER=off must be commented out
    #      - 9000:9000
    volumes:
      - /media/storage/documents/:/data/
    environment:
      - MINIO_USERNAME=depot
      - MINIO_GROUPNAME=depot
      - MINIO_BROWSER=off
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    #      - MINIO_WORM=on
    network_mode: bridge
    user: depot
    labels:
      - "traefik.http.services.storage.loadbalancer.server.port=9000"
      - "traefik.http.routers.storage.rule=PathPrefix(`/storage`)"
      - "traefik.http.routers.storage.middlewares=storage01"
      - "traefik.http.middlewares.storage01.stripprefix.prefixes=/storage"

#  reverse-proxy:
#    image: traefik:v2.0
#    ports:
#      # The HTTP port
#      - "80:80"
#      # The Web UI (enabled by --api.insecure=true)
#      - "8080:8080"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#    command: --api.insecure=true --providers.docker --entrypoints.web.address=:80
#    networks:
#      - lodenet

  rabbitmq:
    image: rabbitmq:3-management #use rabbitmq:3-management because we need the API plugin to be installed.
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - RABBITMQ_DEFAULT_USER=lodestone
      - RABBITMQ_DEFAULT_PASS=lodestone
    network_mode: bridge
    volumes:
      - /opt/mediadepot/apps/lodestone/rabbitmq:/var/lib/rabbitmq
  tika:
    image: analogj/lodestone:tika
    network_mode: bridge
